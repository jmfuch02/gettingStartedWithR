install.packages("KernSmooth")
library(KernSmooth)
x <- 5
x
x <- 1:20
x
x <- c(0.5, 0.6)
x
x <- vector()
x
x <- c(0.5, 0.6)
y <- c(1.7, "a")
y
y <- c(TRUE, 2)
as.numeric(y)
m <- 1:20
m <- 1:10
dim(m) <- c (3,4)
dim(m) <- c (2,5)
a <- list(1, "a", TRUE, i+4i)
a <- list(1, "a", TRUE, 1+4i)
a
a <- list(1, 2, TRUE, 1+4i)
a
x <- c("a", "b", "c", "d", "a")
x[1]
u <- x > "a"
u
u[2]
x[u]
x <- c("a", "b", "c", "c", "d", "a")
u <- x > "a"
y <- list(foo = 1:4, bar = 0.6)
y
y[1]
y[[1]]
y$bar
y["bar"]
y[["bar"]]
a <- y["bar"]
b <- y[["bar"]]
y <- data.frame(a = 1, b = "a")
dput(y)
y
setwd(c:\users\jfuchs\rstats_wdir)
setwd("c:\users\jfuchs\rstats_wdir")
setwd(c:\Users\jfuchs\rstats_wdir)
setwd(c:/Users/jfuchs/rstats_wdir)
setwd(\users\jfuchs\rstats_wdir)
getwd()
q()
x <- 4L
class(x)
x <- c(4, TRUE)
x <- c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
z <- cbdind(x,y)
z <- cbind(x,y)
class(z)
a <- list(2, "a", "b", TRUE)
a[[2]]
b <- a[[2]]
class(b)
x <- 1:4
y< - 2
y <- 2
z = x + y
x <- c(17,14,4,5,13,12,10)
read.csv("\rprog-data-quiz1_data\hw1_data.csv")
read.csv("\\rprog-data-quiz1_data\\hw1_data.csv")
read.csv("//rprog-data-quiz1_data//hw1_data.csv")
getwd()
read.csv("~/rprog-data-quiz1_data/hw1_data.csv")
read.csv("/rprog-data-quiz1_data/hw1_data.csv")
getwd()
read.csv(file = "/rprog-data-quiz1_data/hw1_data.csv")
read.csv(file = "\\rprog-data-quiz1_data\\hw1_data.csv")
help(read.csv)
dir()
cd(rprog-data-quiz1_data)
read.csv(file = "hw1_data.csv")
data <- read.csv(file = "hw1_data.csv")
data[2:]
data[2]
data[,:2]
datalines <- readLines(data, 10)
data[6,1:2]
data[6,1:3]
data[1:2,1:6]
data[1:2,]
data[152:153,]
data[47,]
data["Ozone"]
badOzone = data["Ozone" = NA]
badOzone = data["Ozone"]
badOzone = is.na(data["Ozone"])
data[5,]
badOzone
length(badOzone[badOzone==FALSE])
length(badOzone[badOzone==TRUE])
mean(badOzone[badOzone==FALSE])
mean(badOzone)
mean(data[Ozone])
mean(data["Ozone"])
data["Ozone"]
mean(data)
mean(data[Ozone])
mean(data[$Ozone])
data[1]
mean(data[1])
help(mean)
numdata=as.numeric(data)
numdata=as.numeric(data[1])
numdata <- as.numeric(data[1])
ozone <- data[1]
as.numeric(ozone)
mean(ozone)
numdata <- as.numeric(levels(data))[data]
numdata <- as.numeric(levels(data))["Ozone"]
data[1]
data[$Oz]
data["Ozone"]
class(data)
data["Ozone"]
mean(data["Ozone"])
numozone <- as.numeric(data["Ozone"])
colmeans(data, na.rm=TRUE)
colMeans(data, na.rm=TRUE)
subdata <- data["Ozone" > 31]
subdata
subdata <- data[data[1] > 31]
class(subdata)
gooddata <- complete.cases(data)
data[gooddata, ][1:6, ]
data[gooddata, ]
data[gooddata, ][1:6, ]
data[gooddata, ][1:6, ]["Ozone" > 30]
data[gooddata, ]["Ozone" > 30, ]
data[ozone]
data["Ozone"]
data[gooddata, ][data["Ozone"] > 30, ]
data[data["Ozone"] > 30, ]
[data["Ozone"] > 30, ]
data["Ozone"] > 30
data[c(1,3)]
data[1>30]
data[1>30, ]
data[data[1]>30, ]
data[data[1]>30, ][gooddata, ]
good <- gooddata
gooddata <- data[good, ]
gooddata
gooddata[gooddata[1]>30, ]
gooddata[gooddata["Ozone"]>30, ]
gooddata[gooddata["Ozone"]>31, ][gooddata["Temp"]>90, ]
subdata <- gooddata[gooddata["Ozone"]>30, ]
subdata <- gooddata[gooddata["Ozone"]>31, ]
subdata <- subdata[subdata["Temp"]>90, ]
subdata
colmeans(subdata, na.rm=TRUE)
colMeans(subdata, na.rm=TRUE)
subdata2 <- data[data["Month"]=6, ]
subdata2 <- data[data["Month"]==6, ]
goodsub2 <- is.na(subdata2)
subdata2[goodsub2, ]
subdata2[!goodsub2, ]
subdata2
colMeans(subdata2, na.rm=FALSE)
colMeans(subdata2, na.rm=TRUE)
data[data["Month"]==5]
data[data["Month"]==5, ]
month5 <- data[data["Month"]==5, ]
help(max)
hep(colmax)
help(colmax)
help(colMax)
max(help["Ozone"])
max(month5["Ozone"])
max(month5["Ozone"], na.rm = TRUE)
add2 <- function(x, y) {
x + y
}
add2(2,3)
above <- function(x, n) {
use <- x > n
x[use]
}
x <- 1:20
above(x,12)
above <- function(x, n = 10) {
use <- x > n
x[use]
}
above(x)
columnmean <- function(y) {
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc) {
means[i] <- mean(y[, i])
}
means # this gets returned
}
search()
help(gl)
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5 + 7
x
y <- x - 3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
mean(x)
traceback()
x <- 1
traceback()
library(datasets)
data(iris)
?iris
summary(iris)
head(iris)
mean(iris[$Species == virginica,])
mean(iris[iris$Species == virginica,])
str(iris)
iris$Species
iris(which(iris$Species == "virginica"), )
iris[which(iris$Species == "virginica"), ]
mean(iris[which(iris$Species == "virginica"), ])
vdat <- iris[which(iris$Species == "virginica"), ]
View(vdat)
mean(vdat$Species)
mean(vdat$Sepal.Length)
rowMeans(iris[, 1:4])
apply(iris[,1:4],2,mean)
apply(iris[,1:4],1,mean)
apply(iris,1,mean)
library(datasets)
data(mtcars)
?mtcars
str(mtcars)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(split(mtcars$hp, mtcars$cyl), mean)
hpower <- sapply(split(mtcars$hp, mtcars$cyl), mean)
hpower[,3]
hpower
str(hpower)
hpower(3) - hpower(2)
hpower[3]-hpower[2]
hpower[3]-hpower[1]
debug(ls)
ls
ls()
q
?browse
?clear
str(x)
str(z)
str(str)
set.seed(1)
rpois(5, 2)
set.seed(10)
x <- rbinom(10, 10, 0.5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) +geom_smooth
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies) + stats_smooth("loess")
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(rating, votes, data = movies) + geom_smooth()
install.packages("knitr")
library("knitr")
?lead
?lead()
library(Lahman)
install.packages("Lahman")
library(Lahman)
?lead
?lead()
?lag
source('~/.active-rstudio-document', echo=TRUE)
# Chain of Rocks Lock - Wood River
df <- getTrafficData("MI", "27", 10)
# Print table
df[,c(8, 11, 13)]
daySum <- ddply(.data = df,
.variables = .(day = as.Date(END_OF_LOCKAGE,
format = "%Y-%m-%d")),
summarize,
totalBarges = sum(as.numeric(NUM_BARGES)),
totalBbls = sum(bbls))
# Make some plots
qplot(x = day, y = totalBarges, data = daySum, stat = 'identity',
geom = 'bar', xlab = "Date", ylab = "Number of Barges",
main = "Wood River Traffic")
qplot(x = day, y = totalBbls/1000, data = daySum, stat = 'identity',
geom = 'line', xlab = "Date", ylab = "Barrels (in thousands)",
main = "Wood River Flow") + geom_smooth()
View(df)
x <- c(13,14,16,20,23,19,7)
x
write.csv(x, file = "")
write.csv(x, file = "")[2]
x
paste(x, collapse = ",")
xString = paste(x, collapse = ",")
source('~/.active-rstudio-document', echo=TRUE)
df <- manyToOneTrip(location1 = c(13, 14, 16, 20, 23, 7), location2 = (46), startDate = '2015-02-01',
minTravelTime = 2, maxTravelTime = 100)
df <- manyToOneTrip(location1 = c(13, 14, 16, 20, 23, 7), location2 = (46), startDate = '2015-02-01',
minTravelTime = 2, maxTravelTime = 100)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("RPostgreSQL")
install.packages("ggplot2")
install.packages("plyr")
source('~/.active-rstudio-document')
View(df)
?colSums
?mean
?lm
lm
mean
colSums
setwd("C:/Users/jfuchs/r_wdir/introductionToRCourse/gettingStartedWithR")
load("C:/Users/jfuchs/r_wdir/introductionToRCourse/gettingStartedWithR/.RData")
d <- c(1,2,3,4)
e <- c("red", "white", "red", NA)
f <- c(TRUE,TRUE,TRUE,FALSE)
mydata <- data.frame(d,e,f)
View(mydata)
names(mydata) <- c("ID","Color","Passed") # variable names
print(mydata)
myData[1,3]
mydata[1,3]
mydata[3,2]
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
?mpg
?mpg
?mpg
mpg
?mpg
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
library(slidify)
slidify(Index.Rmd)
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
library(manipulate)
install.packages("manipulate")
library(manipulate)
manipulate(plot(1:x), x = slider(1, 100))
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
slidify("Index.Rmd")
source('~/.active-rstudio-document')
